name: FastAPI CI/CD

on: push

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:   
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Python Virtual ENV
        run: |
          cd backend/link_prediction_api
          pip3 install virtualenv

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: backend/link_prediction_api/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Setup Virtual Environment
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          cd backend/link_prediction_api
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Activate Virtual ENV and Install Dependencies
        if: steps.cache-deps.outputs.cache-hit == 'true'
        run: |
          cd backend/link_prediction_api
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run Tests   
        run: |
          cd backend/link_prediction_api
          source venv/bin/activate
          pytest

      - name: Create archive of dependencies
        run: |
          cd backend/link_prediction_api
          cd ./venv/lib/python3.11/site-packages
          zip -r9 ../../../../api.zip .
          ls
          
      - name: Add API files to Zip file
        run: |
          ls
          cd backend/link_prediction_api/api && zip -g ./api.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: backend/link_prediction_api/api.zip



  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://fastapi-phishfinder/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapi-phishfinder-link_service --s3-bucket fastapi-phishfinder --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
